"""
DO NOT EDIT.
This stub file was autogenerated.
Do not edit by hand.
"""

from __future__ import annotations
from typing import overload, Literal, Any
try:
    import carla
except Exception:
    carla = None  # type: ignore

class SensorCameraRgbStub:
    def __init__(self, sensor_bp: 'carla.ActorBlueprint | None' = None) -> None:
        self.sensor_bp = sensor_bp
        self.name = 'sensor.camera.rgb'

    @overload
    def set_attribute(self, name: Literal['chromatic_aberration_intensity'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['tint'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['shoulder'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['toe'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['white_clip'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['slope'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['blur_radius'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['blur_amount'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['blade_count'], value: int) -> None: ...
    @overload
    def set_attribute(self, name: Literal['exposure_speed_down'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['min_fstop'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['exposure_speed_up'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['exposure_max_bright'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['motion_blur_min_object_screen_size'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['bloom_intensity'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['lens_flare_intensity'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['black_clip'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['motion_blur_max_distortion'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['focal_distance'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['motion_blur_intensity'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['temp'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['gamma'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['enable_postprocess_effects'], value: bool) -> None: ...
    @overload
    def set_attribute(self, name: Literal['iso'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['shutter_speed'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['exposure_compensation'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['exposure_mode'], value: Literal['histogram', 'manual']) -> None: ...
    @overload
    def set_attribute(self, name: Literal['calibration_constant'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['lens_y_size'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['lens_x_size'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['lens_kcube'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['lens_k'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['lens_circle_multiplier'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['fstop'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['fov'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['image_size_y'], value: int) -> None: ...
    @overload
    def set_attribute(self, name: Literal['chromatic_aberration_offset'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['lens_circle_falloff'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['image_size_x'], value: int) -> None: ...
    @overload
    def set_attribute(self, name: Literal['sensor_tick'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['exposure_min_bright'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['role_name'], value: Literal['front', 'back', 'left', 'right', 'front_left', 'front_right', 'back_left', 'back_right']) -> None: ...
    def set_attribute(self, name: str, value: Any) -> None:
        if self.sensor_bp is None:
            return
        # CARLA expects string values for blueprint attributes
        self.sensor_bp.set_attribute(name, str(value))

__all__ = [
    'SensorCameraRgbStub',
]
