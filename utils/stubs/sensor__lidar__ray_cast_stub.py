"""
DO NOT EDIT.
This stub file was autogenerated.
Do not edit by hand.
"""

from __future__ import annotations
from typing import overload, Literal, Any
try:
    import carla
except Exception:
    carla = None  # type: ignore

class SensorLidarRayCastStub:
    def __init__(self, sensor_bp: 'carla.ActorBlueprint | None' = None) -> None:
        self.sensor_bp = sensor_bp
        self.name = 'sensor.lidar.ray_cast'

    @overload
    def set_attribute(self, name: Literal['noise_stddev'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['dropoff_zero_intensity'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['atmosphere_attenuation_rate'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['horizontal_fov'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['lower_fov'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['upper_fov'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['rotation_frequency'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['points_per_second'], value: int) -> None: ...
    @overload
    def set_attribute(self, name: Literal['dropoff_intensity_limit'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['noise_seed'], value: int) -> None: ...
    @overload
    def set_attribute(self, name: Literal['range'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['channels'], value: int) -> None: ...
    @overload
    def set_attribute(self, name: Literal['dropoff_general_rate'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['sensor_tick'], value: float) -> None: ...
    @overload
    def set_attribute(self, name: Literal['role_name'], value: Literal['front', 'back', 'left', 'right', 'front_left', 'front_right', 'back_left', 'back_right']) -> None: ...
    def set_attribute(self, name: str, value: Any) -> None:
        if self.sensor_bp is None:
            return
        # CARLA expects string values for blueprint attributes
        self.sensor_bp.set_attribute(name, str(value))

__all__ = [
    'SensorLidarRayCastStub',
]
